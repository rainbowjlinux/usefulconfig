set nocompatible              " be iMproved, required
filetype off                  " required

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Bundle 'VundleVim/Vundle.vim'
Bundle 'kien/rainbow_parentheses.vim'
Bundle 'majutsushi/tagbar'
Bundle 'Raimondi/delimitMate'
Bundle 'bronson/vim-trailing-whitespace'

call vundle#end()            " required
filetype plugin indent on    " required

syntax on
set incsearch
set ignorecase
set hlsearch
set smartcase

set fileencodings=utf-8,gb2312,gbk,gb18030
set termencoding=utf-8
set encoding=prc

set expandtab

set tabstop=4

set shiftwidth=4

set showmatch

"let mapleader=';'

set autoindent

set smartindent

set hlsearch

set ruler
set number
set nocompatible
set backspace=indent,eol,start
set backspace=2

set ignorecase

" keymapping
map j gj
map k gk
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-h> <C-w>h
map <C-l> <C-w>l
nmap <F4> :TagbarToggle<CR>

"""""""""""""""""
" wjl customize
"""""""""""""""""

"for rainbow_parentheses
let g:rbpt_colorpairs = [
            \ ['brown', 'RoyalBlue3'],
            \ ['Darkblue', 'SeaGreen3'],
            \ ['darkgray', 'DarkOrchid3'],
            \ ['darkgreen', 'firebrick3'],
            \ ['darkcyan', 'RoyalBlue3'],
            \ ['darkred', 'SeaGreen3'],
            \ ['darkred', 'DarkOrchid3'],
            \ ['darkcyan', 'SeaGreen3'],
            \ ['darkmagenta', 'DarkOrchid3'],
            \ ['brown', 'firebrick3'],
            \ ['gray', 'RoyalBlue3'],
            \ ['black', 'SeaGreen3'],
            \ ['darkmagenta', 'DarkOrchid3'],
            \ ['Darkblue', 'firebrick3'],
            \ ['darkgreen', 'RoyalBlue3'],
            \ ['red', 'firebrick3'],
            \ ]
let g:rbpt_max = 16
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

" tagbar
let g:tagbar_left=1
let g:tagbar_width=30
let g:tagbar_ctags_bin='/usr/bin/ctags'
autocmd BufReadPost *.py call tagbar#autoopen()

"remember the last position
if has("autocmd")
    au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal g'\"" | endif
endif

"Quickly Run .py
map <F5> :call CompileRunGcc()<CR>
func! CompileRunGcc()
    exec "w"
    if &filetype == 'python'
        exec "!python3 %"
    endif
endfunc

set mouse=a
